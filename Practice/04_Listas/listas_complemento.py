# üß© 1. Eliminar duplicados sin usar set()
# Dada una lista con n√∫meros repetidos, elimina los duplicados manteniendo el orden.
# numeros = [4, 2, 4, 7, 2, 9, 1, 4, 7]
# # Resultado esperado: [4, 2, 7, 9, 1]

numeros = [4, 2, 4, 7, 2, 9, 1, 4, 7]
new_numeros = []

for unidad in numeros:
    if unidad not in new_numeros:  # Si no est√° ya en la nueva lista
        new_numeros.append(unidad)  # Lo agregamos

print(new_numeros)  # [4, 2, 7, 9, 1]

# üîÅ 2. Aplanar una lista de listas
# Convierte una lista anidada en una sola lista plana.
# listas = [[1, 2], [3, 4], [5, 6]]
# # Resultado esperado: [1, 2, 3, 4, 5, 6]


listas = [[1, 2], [3, 4], [5, 6]]
resultado = []

for unidad in listas:
    for unidad2 in unidad:
        resultado.append(unidad2)

print(resultado)

# üìä 3. Contar elementos √∫nicos
# Dada una lista, cuenta cu√°ntos elementos son √∫nicos (es decir, que solo aparecen una vez).
# datos = [1, 2, 2, 3, 4, 4, 5]
# # Resultado esperado: 3 (los √∫nicos son 1, 3, 5)

datos = [1, 2, 2, 3, 4, 4, 5]
valores_unicos = []


for unidad in datos:
    if datos.count(unidad) == 1: 
        valores_unicos.append(unidad)

print(f'Resultado esperado: {len(valores_unicos)} (los √∫nicos son: {valores_unicos})')

# üìè 4. Longitud de palabras
# Dada una lista de palabras, crea una nueva lista con la longitud de cada palabra.
# palabras = ['python', 'listas', 'practica']
# # Resultado esperado: [6, 6, 8]


palabras = ['python', 'listas', 'practica']
longitud = []

for palabra in palabras:
    longitud.append(len(palabra))
print(longitud)

# üî¢ 5. Pares e impares separados
# Dada una lista de n√∫meros, separa los pares e impares en dos listas.
# numeros = [1, 4, 7, 8, 2, 5, 10]
# # pares = [4, 8, 2, 10], impares = [1, 7, 5]

numeros = [1, 4, 7, 8, 2, 5, 10]
pares = []
impares = []
for numero in numeros:
    if numero % 2 == 0:
        pares.append(numero)
    else:
        impares.append(numero)
print(f'Pares = {pares}, impares = {impares}')


# ‚ÜïÔ∏è 6. Rotar elementos
# Rota los elementos de una lista una posici√≥n a la derecha.
# valores = [10, 20, 30, 40]
# # Resultado esperado: [40, 10, 20, 30]


valores = [10, 20, 30, 40]
valores = valores[-1:] + valores[:-1]
print(valores)


# üîÑ 7. Intercambiar extremos
# Intercambia el primer y √∫ltimo elemento de la lista.
# lista = [1, 2, 3, 4, 5]
# # Resultado esperado: [5, 2, 3, 4, 1]

lista = [1, 2, 3, 4, 5]
lista = lista[-1:] + lista[1:-1] + lista[:1]
# lista[0], lista[-1] = lista[-1], lista[0] Otra opci√≥n. 
print(lista)

# üß† 8. Sublistas crecientes
# Encuentra todas las sublistas crecientes dentro de una lista.
# lista = [1, 2, 1, 2, 3, 1]
# # Resultado esperado (sublistas crecientes consecutivas): [[1, 2], [1, 2, 3]]


lista = [1, 2, 1, 2, 3, 1]
sublistas_crecientes = []
sublista_actual = []

for i in range(len(lista)):
    if not sublista_actual:
        sublista_actual.append(lista[i])
    elif lista[i] > sublista_actual[-1]:
        sublista_actual.append(lista[i])
    else:
        if len(sublista_actual) > 1:
            sublistas_crecientes.append(sublista_actual)
        sublista_actual = [lista[i]]

# Verificamos al final por si la √∫ltima sublista era creciente
if len(sublista_actual) > 1:
    sublistas_crecientes.append(sublista_actual)

print(sublistas_crecientes) 


# ‚ôªÔ∏è 9. Eliminar elementos consecutivos duplicados
# Dada una lista, elimina los elementos duplicados solo si son consecutivos.
# datos = [1, 1, 2, 2, 2, 3, 1, 1, 4]
# # Resultado esperado: [1, 2, 3, 1, 4]

datos = [1, 2, 1, 1, 3]
resultado = []

for i in datos:
    if i not in resultado:
        resultado.append(i)
    elif i != resultado[-1]:
        resultado.append(i)
print(resultado)

# Seg√∫n gpt la primera version es erronea, aunque el resultado es el esperado, por algun motivo lo tomaba como erroneo al final lo hice entrar en razon, (hice entrar en raz√≥n a una IA xd?). Aunque la version a continuaci√≥n es mas limpia. 

# datos = [1, 1, 2, 2, 2, 3, 1, 1, 4]
# resultado = []

# for i in datos:
#     if not resultado or i != resultado[-1]:
#         resultado.append(i)

# print(resultado)


# üßÆ 10. Suma acumulativa
# Transforma una lista en su forma acumulada.
# valores = [1, 2, 3, 4]
# # Resultado esperado: [1, 3, 6, 10]


valores = [1, 2, 3, 4]
resultado = []

for i in valores:
    if not resultado:
        resultado.append(i)
    else:
        valor = resultado[-1] + i
        resultado.append(valor)
print(resultado)